Base_functions:={(+,2), (-,2), (*,2)}
Extension_functions:={(V, 1, 1), (E, 2, 1), (amnt, 1, 1), (max, 2, 1), (X, 1, 1), (Y, 1, 1)}
Relations:={(<,2), (>,2), (<=,2), (>=,2)}

% Problem: Liegt N2 in R<-? Metrik: maximum, Instanzierung Pi_N2
% E(u,v) <-> Pi_N2(u,v) und NOT(E(u,v) <- Pi_R(u,v)) ist unerfüllbar
% liefert sat

Clauses :=

% Knoten sowie Kanten sind entweder 0 oder 1
(FORALL x).	--> V(x)=_1, V(x)=_0;
(FORALL x,y).	--> E(x,y)=_1, E(x,y)=_0;

% Kante existiert zwischen zwei Knoten und ist symmetrisch
(FORALL x,y).	E(x,y)=_1 --> E(y,x)=_1;
(FORALL x,y).	E(x,y)=_1 --> V(x)=_1;

% Axiome für den Betrag einer Zahl
(FORALL x).	--> amnt(x) >= _0;
(FORALL x).	x >= _0 --> amnt(x) = x;
(FORALL x).	x < _0 --> amnt(x) = _0 - x;

% Axiome für das Maximum zweier Zahlen 
(FORALL x,y).	x>=y --> max(x,y)=x;
(FORALL x,y).	x<y --> max(x,y)=y;
(FORALL x,y).	max(x,y)=x --> x>=y;
(FORALL x,y).	max(x,y)=y --> x<y;
(FORALL x,y).	--> max(x,y)=x, max(x,y)=y;

% Punkte sind gleich wenn ihre Koordinaten gleich sind
(FORALL x,y). 	x=y --> X(x)=X(y);
(FORALL x,y). 	x=y --> Y(x)=Y(y);
(FORALL x,y).	X(x)=X(y), Y(x)=Y(y) --> x=y;

Query :=

% Instanzierung E(u,v) -> Pi_N2(u,v)
OR(E(u,v)=_0, V(w)=_0, uw >= uv);
OR(E(u,v)=_0, V(w)=_0, vw >= uv);

% Instanzierung Pi_N2(u,v) -> E(u,v)
OR(V(w)=_1, E(u,v)=_1);
OR(uw < uv, E(u,v)=_1, V(w)=_1);
OR(vw < uv, E(u,v)=_1, V(w)=_1);
OR(uw < uv, E(u,v)=_1, vw < uv);

% NOT(Pi_R(u,v) -> E(u,v))
% heißt Pi_R(u,v) und E(u,v)=0 
E(u,v)=_0;
OR(V(w)=_0, uw >= uv, vw >= uv);

% Punkte sind verschieden
NOT(u=v);
NOT(v=w);
NOT(u=w);

% Distanzen maximum
uv = max(amnt(X(u)-X(v)), amnt(Y(u)-Y(v)));
vw = max(amnt(X(v)-X(w)), amnt(Y(v)-Y(w)));
uw = max(amnt(X(u)-X(w)), amnt(Y(u)-Y(w)));