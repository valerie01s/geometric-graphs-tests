Base_functions:={(+,2), (-,2), (*,2)}
Extension_functions:={(V, 1, 1), (E, 2, 1), (amnt, 1, 1), (X, 1, 1), (Y, 1, 1)}
Relations:={(<,2), (>,2), (<=,2), (>=,2)}

% Problem: Liegt R-> in G->? Metrik: manhattan, Instanzierung Pi_R
% E(u,v) -> Pi_R(u,v) und NOT(E(u,v) -> Pi_G(u,v)) ist unerf¸llbar
% liefert sat

Clauses :=

% Knoten sowie Kanten sind entweder 0 oder 1
(FORALL x).	--> V(x)=_1, V(x)=_0;
(FORALL x,y).	--> E(x,y)=_1, E(x,y)=_0;

% Kante existiert zwischen zwei Knoten und ist symmetrisch
(FORALL x,y).	E(x,y)=_1 --> E(y,x)=_1;
(FORALL x,y).	E(x,y)=_1 --> V(x)=_1;

% Axiome f¸r den Betrag einer Zahl
(FORALL x).	--> amnt(x) >= _0;
(FORALL x).	x >= _0 --> amnt(x) = x;
(FORALL x).	x < _0 --> amnt(x) = _0 - x;

% Punkte sind gleich wenn ihre Koordinaten gleich sind
(FORALL x,y). 	x=y --> X(x)=X(y);
(FORALL x,y). 	x=y --> Y(x)=Y(y);
(FORALL x,y).	X(x)=X(y), Y(x)=Y(y) --> x=y;

Query :=

% m ist Mittelpunkt des Segments uv
_2*X(m) = X(u)+X(v);
_2*Y(m) = Y(u)+Y(v);

% Punkte sind verschieden
NOT(u=v);
NOT(u=w);
NOT(u=m);
NOT(v=w);
NOT(w=m);
NOT(v=m);

% Instanzierung E(u,v) -> Pi_R(u,v)
OR(E(u,v)=_0, V(w)=_0, uw >= uv, vw >= uv);

% NOT(E(u,v) -> Pi_G(u,v))
% heiﬂt E(u,v)=1 und NOT(Pi_G(u,v))
E(u,v)=_1;
V(w)=_1;
mw <= mu;

% Distanzen manhattan
uv = amnt(X(u)-X(v)) + amnt(Y(u)-Y(v));
vw = amnt(X(v)-X(w)) + amnt(Y(v)-Y(w));
uw = amnt(X(u)-X(w)) + amnt(Y(u)-Y(w));
mw = amnt(X(m)-X(w)) + amnt(Y(m)-Y(w));
mu = amnt(X(m)-X(u)) + amnt(Y(m)-Y(u));
vm = amnt(X(v)-X(m)) + amnt(Y(v)-Y(m));